{"version":3,"file":"static/js/642.091f4c80.chunk.js","mappings":"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","sources":["components/API.js","components/TrendList/TrendList.jsx","components/pages/Home/Home.styled.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '183c3cacc9c38c09c14d38798ccfe9d7';\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const getMovies = async () => {\n  const response = await moviesApi.get('trending/all/day', {\n    params: { api_key: KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieId = async id => {\n  const response = await moviesApi.get(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getCast= async id => {\n  const response = await moviesApi.get(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getReviews = async id => {\n  const response = await moviesApi.get(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getQuery = async query => {\n  const response = await moviesApi.get('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data;\n};\n\n//https://api.themoviedb.org/3/search/movie?query=batman","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TrendingList, TrendingMember } from 'components/pages/Home/Home.styled';\nexport const TrendList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <TrendingList>\n      {films.map(film => {\n        return (\n          <TrendingMember key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.title || film.name || film.original_title}\n            </Link>\n          </TrendingMember>\n        );\n      })}\n    </TrendingList>\n  );\n};\n\nTrendList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};","import styled from '@emotion/styled';\nexport const TrendingList = styled.div`\nlist-style-type:none;\n`\nexport const TrendingTitle = styled.div`\n\nfont-size: 32px;\n`\nexport const TrendingMember = styled.div`\nmargin-top: 10px;\n`","import { useSearchParams } from 'react-router-dom';\nimport { getQuery } from 'components/API';\nimport { useEffect, useState } from 'react';\nimport { TrendList } from 'components/TrendList/TrendList';\nimport { Notify } from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchInput, setSearchInput] = useState('');\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    const getFilms = async query => {\n      try {\n        setIsLoading(true);\n        const data = await getQuery(query);\n        if (data.results.length === 0) {\n          return Notify.failure('No movies found, try something else!');\n        }\n        setFilms(data.results);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const searchValue = searchParams.get('query');\n    if (searchValue) {\n      getFilms(searchValue);\n    }\n  }, [searchParams]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!searchInput.trim()) {\n      return Notify.failure('Input Required!');\n    }\n    setSearchParams({ query: searchInput.trim() });\n    setSearchInput('');\n  };\n\n  return (\n    <main>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={searchInput}\n          onChange={e => setSearchInput(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {films.length > 0 && <TrendList films={films} />}\n      {isLoading && <Loader />}\n      {error && <p>An Error Occurred! {error}</p>}\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["KEY","moviesApi","axios","baseURL","getMovies","get","params","api_key","response","data","getMovieId","id","getCast","getReviews","getQuery","query","TrendList","films","location","useLocation","map","film","to","state","from","title","name","original_title","TrendingList","styled","TrendingTitle","TrendingMember","useState","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchInput","setSearchInput","setFilms","useEffect","getFilms","results","length","Notify","console","searchValue","action","onSubmit","event","preventDefault","trim","type","value","onChange","e","target"],"sourceRoot":""}