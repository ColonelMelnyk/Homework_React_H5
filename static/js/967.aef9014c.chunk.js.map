{"version":3,"file":"static/js/967.aef9014c.chunk.js","mappings":"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","sources":["components/API.js","components/pages/MovieInfo/MovieInfo.jsx","components/pages/MovieInfo/MovieStyles.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '183c3cacc9c38c09c14d38798ccfe9d7';\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const getMovies = async () => {\n  const response = await moviesApi.get('trending/all/day', {\n    params: { api_key: KEY },\n  });\n  return response.data;\n};\n\nexport const getMovieId = async id => {\n  const response = await moviesApi.get(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getCast= async id => {\n  const response = await moviesApi.get(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getReviews = async id => {\n  const response = await moviesApi.get(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n\n  return response;\n};\n\nexport const getQuery = async query => {\n  const response = await moviesApi.get('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data;\n};\n\n//https://api.themoviedb.org/3/search/movie?query=batman","import { getMovieId } from 'components/API';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams, Link } from 'react-router-dom';\nimport { MovieDetail, BackButton, MoreInfo } from './MovieStyles.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\n\nconst MovieInfo = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const [currentMovie, setCurrentMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getCurrentMovie = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieId(id);\n        if (response.data.length === null) {\n          return Notify.failure('Oops.. Simesing went wrong');\n        }\n        setCurrentMovie(response.data);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCurrentMovie();\n  }, [id]);\n\n  const posterUrl = currentMovie?.poster_path\n    ? `https://image.tmdb.org/t/p/w200${currentMovie.poster_path}`\n    : 'https://placehold.it/200x300';\n\n  const userScore = currentMovie ? currentMovie.vote_average * 10 : null;\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {error && <p>An Error Occurred! {error}</p>}\n      <BackButton to={backLinkLocationRef.current}>Go Back</BackButton>\n      {currentMovie && (\n        <>\n          <MovieDetail>\n            <img src={posterUrl} alt=\"error\" />\n            <div>\n              <h2>{currentMovie.original_title}</h2>\n              <p>User Score: {userScore}%</p>\n              <h2>Overview</h2>\n              <p>{currentMovie.overview ?? 'There is no review'}</p>\n              <h2>Genres</h2>\n              <p>{currentMovie.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </MovieDetail>\n          <MoreInfo>\n            <h2>Additional Information</h2>\n            <ul>\n              <li>\n                <Link to={'cast'}>Cast</Link>\n              </li>\n              <li>\n                <Link to={'reviews'}>Reviews</Link>\n              </li>\n            </ul>\n          </MoreInfo>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieInfo;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoreInfo = styled.div`\n  border-top: black solid 1px;\n  border-bottom: black solid 1px;\n  padding: 10px;\n`;\nexport const ReviewList = styled.div`\nlist-style-type: none;\n`\nexport const ReviewBlock = styled.div`\nborder-bottom: 1px solid #000000;\n`\n\nexport const BackButton = styled(Link)`\n  display: block;\n  width: 60px;\n  text-align: center;\n  border: 1px black solid;\n  border-radius: 4px;\n  text-decoration: none;\n  margin-bottom: 5px;\n  color: #000000;\n  &:hover {\n    background-color: #000000;\n    color: #FFFFFF;\n  }\n`;\n\nexport const MovieDetail = styled.div`\n  display: flex;\n  gap: 16px;\n  padding: 10px;\n`;\n"],"names":["KEY","moviesApi","axios","baseURL","getMovies","get","params","api_key","response","data","getMovieId","id","getCast","getReviews","getQuery","query","useState","isLoading","setIsLoading","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","currentMovie","setCurrentMovie","useParams","useEffect","getCurrentMovie","length","Notify","console","posterUrl","poster_path","userScore","vote_average","to","current","src","alt","original_title","overview","genres","map","genre","name","join","Suspense","fallback","MoreInfo","styled","ReviewList","ReviewBlock","BackButton","Link","MovieDetail"],"sourceRoot":""}